import argparse

def parse_args():
    parser = argparse.ArgumentParser(description='Model Parameters')
    parser.add_argument('--lr', default=1e-4, type=float, help='learning rate')
    parser.add_argument('--lr_z', default=1e-2, type=float, help='learning rate')
    parser.add_argument('--dropout', default=0.1, type=float, help='dropout')
    parser.add_argument('--pwd', default='/home/zjy/project/STARIM', type=str, help='project base dir')
    parser.add_argument('--in_channels', default=1, type=int, help='information in node')
    parser.add_argument('--hidden_channels', default=64, type=int, help='model hidden layer width')
    parser.add_argument('--Tstep', default=10, type=int, help='rnn model pred steps')
    parser.add_argument('--burn_in_steps', default = 0, type=int, help='use pred after burn_in_steps')
    parser.add_argument('--test_batch', default=8, type=int, help='testing batch size (number of cacade)')
    parser.add_argument('--train_batch', default=60, type=int, help='training batch size (number of cacade)')
    parser.add_argument('--train_epoch', default=20, type=int, help='number of epochs')
    parser.add_argument('--load_model', default=True, help='if load model, True or False')
    parser.add_argument('--gpu', default='7', type=str, help='indicates which gpu to use')
    parser.add_argument('--data_mode', default='ic', type=str, help='[ic, sir]')
    parser.add_argument('--max_task_num', default=64, type=int, help='max_task_num')
    parser.add_argument('--tau', type=float, default=1,help='temperature for Gumbel Softmax')
    parser.add_argument('--im_seed_rate', type=float, default=0.05,help='seed_rate')
    parser.add_argument('--im_mode', default='sir', type=str, help='[sir, ic]')
    parser.add_argument('--window_size', default=32, type=int, help='rnn computation graph length')
    parser.add_argument('--sample_num', default=2000, type=int, help='sample_num')
    parser.add_argument('--propagation_data', default='ic', type=str, help='propagation data') 
    return parser.parse_args()
args = parse_args()